#!/usr/bin/env python
PACKAGE = "cloud_segmenter"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#Supervoxel segmentation parameters
gen.add("color_importance", double_t, 0, "Weight for color distance between points", 0, 0, 10)
gen.add("spatial_importance", double_t, 0, "Weight for spatial distance between points", 1, 0, 10)
gen.add("normal_importance", double_t, 0, "Weight for angle between surface normals", 4, 0, 10)
gen.add("voxel_resolution", double_t, 0, "Size of voxels", 0, 0.0075, 1)
gen.add("seed_resolution", double_t, 0, "Spacing for voxel seeds", 0, 0.03, 1)
gen.add("use_supervox_refinement", bool_t, 0, "A Boolean parameter", False)
gen.add("use_plane_removal", bool_t, 0, "Remove horizontal planes from consideration", False)

#LCCP segmentation parameters
gen.add("concavity_thresh", double_t, 0, "How large (in degrees) a concavity can still be treated as convex", 10, 0, 90)
gen.add("smoothness_thresh", double_t, 0, "Smoothing to clean up holes in objects", 0.1, 0, 1)
gen.add("use_extended_convexity", bool_t, 0, "True treats concave points as convex if they have convex connections to neighbors", False)
gen.add("use_sanity_criterion", bool_t, 0, "True breaks objects at singular connection points", False)

exit(gen.generate(PACKAGE, "cloud_segmenter", "cloudSeg"))